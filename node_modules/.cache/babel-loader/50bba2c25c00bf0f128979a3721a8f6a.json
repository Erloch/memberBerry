{"ast":null,"code":"var _jsxFileName = \"/Users/erichbernhardt/Desktop/code/memory/memory/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Counter from \"./components/Counter\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      clicked: [],\n      score: 0\n    };\n\n    this.shuffled = () => {\n      const shuffled = this.state.friends;\n      shuffled.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n      this.setState({\n        friends: shuffled\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      let choices = this.state.friends;\n      let clicked = this.state.clicked;\n      let score = this.state.score;\n\n      for (var i = 0; i < choices.length; i++) {\n        if (parseInt(event.target.id) === choices[i].id) {\n          choices[i].clicked = true;\n          choices[i].active = true;\n          clicked.push(choices[i]);\n        }\n      }\n\n      this.setState({\n        friends: choices,\n        clicked\n      }, () => {\n        if (this.state.clicked.length === 2 && this.state.clicked[0].name === this.state.clicked[1].name) {\n          this.removeFriend(this.state.clicked[0].name);\n          this.setState({\n            clicked: [],\n            score: this.state.score + 1\n          });\n        } else if (this.state.clicked.length === 2) {\n          for (var i = 0; i < choices.length; i++) {\n            choices[i].clicked = false;\n          }\n\n          this.setState({\n            friends: choices,\n            clicked: []\n          });\n        }\n      });\n      console.log(friends);\n      console.log(clicked);\n      console.log(score);\n      this.shuffled();\n    };\n\n    this.removeFriend = name => {\n      // Filter this.state.friends for friends with an id not equal to the id being removed\n      const friends = this.state.friends.filter(friend => friend.name !== name); // Set this.state.friends equal to the new friends array\n\n      this.setState({\n        friends\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.shuffled();\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Member Match? Member?\"), React.createElement(Counter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Score: \", this.state.score), this.state.friends.map(friend => React.createElement(FriendCard, {\n      removeFriend: this.removeFriend,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/erichbernhardt/Desktop/code/memory/memory/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","Counter","App","state","clicked","score","shuffled","sort","a","b","Math","random","setState","handleClick","event","preventDefault","choices","i","length","parseInt","target","id","active","push","name","removeFriend","console","log","filter","friend","componentDidMount","render","map","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Counter from \"./components/Counter\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clicked: [],\n    score: 0,\n  };\n\n  componentDidMount(){\nthis.shuffled()\n  }\n\n  shuffled = () => {\n    const shuffled = this.state.friends\n    shuffled.sort(function(a, b){return 0.5 - Math.random()});\n    this.setState({friends: shuffled})\n  }\n\n  handleClick = event => {\n    event.preventDefault();\n    let choices = this.state.friends;\n    let clicked = this.state.clicked;\n    let score = this.state.score;\n    \n    \n    for (var i = 0; i < choices.length; i++) {\n      if(parseInt(event.target.id) === choices[i].id) {\n        choices[i].clicked=true;\n        choices[i].active=true\n        clicked.push(choices[i])\n      \n      }\n    }\n\n    this.setState({\n      friends: choices,\n      clicked\n    }, () => {\n      if(this.state.clicked.length === 2 && this.state.clicked[0].name === this.state.clicked[1].name){\n       this.removeFriend(this.state.clicked[0].name);\n       this.setState({\n        clicked: [],\n        score: (this.state.score + 1)\n       })\n      \n      }\n      else if (this.state.clicked.length === 2){\n        for (var i = 0; i < choices.length; i++) {\n        choices[i].clicked = false\n          }\n          this.setState({\n            friends: choices,\n            clicked: [],\n          })\n          \n        }\n      }\n    )\n    console.log(friends)\n    console.log(clicked)\n      console.log(score)\n      this.shuffled()\n  }\n\n\n  removeFriend = name => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.name !== name);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ \n      friends\n    });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>\n          Member Match? Member?\n        </Title>\n        <Counter>\n          Score: {this.state.score}\n        </Counter>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            onClick={this.handleClick}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}